services:
  backend:
    build:
      context: ../../
      dockerfile: deployments/docker/Dockerfile
    container_name: go-backend
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - ../../.env
    volumes:
      - ../../:/app
      - ~/.aws:/root/.aws:ro
    networks:
      - webapp-net

  postgres:
    image: postgres:15
    container_name: postgres-db
    env_file:
      - ../../.env
    environment:
      POSTGRES_USER: ${PG_USER:-postgres}
      POSTGRES_PASSWORD: ${PG_PASSWORD:-yourpassword}
      POSTGRES_DB: ${PG_DB_NAME:-yourdbname}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - webapp-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  postgres-data:

networks:
  webapp-net:
